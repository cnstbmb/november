# server {
#         listen 80;
#         listen [::]:80;
#         server_name himenkov.ru www.himenkov.ru;

#         location ~ /.well-known/acme-challenge {
#           allow all;
#           root /var/www/html;
#         }

#         location / {
#                 rewrite ^ https://$host$request_uri? permanent;
#         }
# }

server {
        listen       80;
        server_name  localhost;
        # listen 80;
        # listen [::]:80;
        # listen 443 ssl http2;
        # listen [::]:443 ssl http2;
        # server_name himenkov.ru www.himenkov.ru;

        # server_tokens off;

        # ssl_certificate /etc/letsencrypt/live/himenkov.ru/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/himenkov.ru/privkey.pem;

        # ssl_buffer_size 8k;

        # ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        # ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        # ssl_prefer_server_ciphers on;

        # ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        # ssl_ecdh_curve secp384r1;
        # ssl_session_tickets off;

        # ssl_stapling on;
        # ssl_stapling_verify on;
        # resolver 8.8.8.8;

        # location @angular-app {
        location / {
                # try_files $uri @nodejs-server;
                proxy_pass http://angular-app:8080;
                # add_header X-Frame-Options "SAMEORIGIN" always;
                # add_header X-XSS-Protection "1; mode=block" always;
                # add_header X-Content-Type-Options "nosniff" always;
                # add_header Referrer-Policy "no-referrer-when-downgrade" always;
                # add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        }

        # try_files $uri $uri/ /index.html;

        # location @nodejs-server {
        location /api {
                proxy_pass http://nodejs-server:3000;
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
                # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
                # enable strict transport security only if you understand the implications
        }

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
}

# server {
#     listen       80;
#     server_name  localhost;

#     #access_log  /var/log/nginx/host.access.log  main;

#     location / {
#         root   /usr/share/nginx/html;
#         index  index.html index.htm;
#     }

#     #error_page  404              /404.html;

#     # redirect server error pages to the static page /50x.html
#     #
#     error_page   500 502 503 504  /50x.html;
#     location = /50x.html {
#         root   /usr/share/nginx/html;
#     }

#     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#     #
#     #location ~ \.php$ {
#     #    proxy_pass   http://127.0.0.1;
#     #}

#     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#     #
#     #location ~ \.php$ {
#     #    root           html;
#     #    fastcgi_pass   127.0.0.1:9000;
#     #    fastcgi_index  index.php;
#     #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#     #    include        fastcgi_params;
#     #}

#     # deny access to .htaccess files, if Apache's document root
#     # concurs with nginx's one
#     #
#     #location ~ /\.ht {
#     #    deny  all;
#     #}
# }