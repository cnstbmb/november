version: "3.5"
services:
  nodejs-server:
    image: "cnstbmb/khimenkov-nodejs-server:latest"
    restart: always
    container_name: nodejs-server
    networks:
      - app-network
    volumes:
      - configs:/home/app/server/configs
      - logs:/home/app/server/logs
    depends_on:
      - postgres-db
    env_file:
      - database.env
  angular-app:
    image: "cnstbmb/khimenkov-angular-app:latest"
    restart: always
    container_name: angular-app
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - nodejs-server
  postgres-db:
    image: postgres:17
    restart: always
    container_name: postgres-db
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
      - postgres_init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    env_file:
      - database.env
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - nodejs-server
    networks:
      - app-network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email cnstbmb@gmail.com --agree-tos --no-eff-email --force-renewal -d konstantin.himenkov.ru
volumes:
  certbot-etc:
    driver: local
    driver_opts:
      type: none
      device: /srv/certbot/etc
      o: bind
  certbot-var:
    driver: local
    driver_opts:
      type: none
      device: /srv/certbot/var
      o: bind
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /srv/views
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /srv/dhparam/
      o: bind
  configs:
    driver: local
    driver_opts:
      type: none
      device: /srv/configs
      o: bind
  pg-data:
    driver: local
    driver_opts:
      type: none
      device: /srv/pg-data
      o: bind
  logs:
    driver: local
    driver_opts:
      type: none
      device: /srv/logs
      o: bind
  postgres_init:
    driver: local
    driver_opts:
      type: none
      device: /srv/postgres/init
      o: bind
networks:
  app-network:
    driver: bridge
